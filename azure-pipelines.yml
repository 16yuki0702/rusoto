trigger: ["master"]
pr: ["master"]

jobs:
- job: 'unit_and_integration_tests_linux'
  displayName: 'Unit and integration tests on Linux'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - checkout: self
      fetchDepth: 5
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: make unit_test
      displayName: 'Run unit tests'
    - script: make rustls_unit_test
      displayName: 'Run unit tests with rustls'
    - script: make check_integration_test
      displayName: 'Cargo check integration tests'

- job: 'unit_and_integration_tests_linux_beta'
  displayName: 'Unit and integration tests on Linux (beta channel)'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain beta
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: RUST_VERSION=beta make unit_test
      displayName: 'Run unit tests'
    - script: RUST_VERSION=beta make rustls_unit_test
      displayName: 'Run unit tests with rustls'
    - script: RUST_VERSION=beta make check_integration_test
      displayName: 'Cargo check integration tests'

- job: 'unit_and_integration_tests_linux_nightly'
  displayName: 'Unit and integration tests on Linux (nightly channel)'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: RUST_VERSION=nightly make unit_test
      displayName: 'Run unit tests'
      continueOnError: true
    - script: RUST_VERSION=nightly make rustls_unit_test
      displayName: 'Run unit tests with rustls'
      continueOnError: true
    - script: RUST_VERSION=nightly make check_integration_test
      displayName: 'Cargo check integration tests'
      continueOnError: true

- job: 'unit_and_integration_tests_osx'
  displayName: 'Unit and integration tests on OSX'
  pool:
    vmImage: 'macos-10.13'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: make unit_test
      displayName: 'Run unit tests'
    - script: make rustls_unit_test
      displayName: 'Run unit tests with rustls'
    - script: make check_integration_test
      displayName: 'Cargo check integration tests'

- job: 'unit_and_integration_tests_osx_beta'
  displayName: 'Unit and integration tests on OSX (beta channel)'
  pool:
    vmImage: 'macos-10.13'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain beta
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: RUST_VERSION=beta make unit_test
      displayName: 'Run unit tests'
    - script: RUST_VERSION=beta make rustls_unit_test
      displayName: 'Run unit tests with rustls'
    - script: RUST_VERSION=beta make check_integration_test
      displayName: 'Cargo check integration tests'

- job: 'unit_and_integration_tests_osx_nightly'
  displayName: 'Unit and integration tests on OSX (nightly channel)'
  pool:
    vmImage: 'macos-10.13'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: RUST_VERSION=nightly make unit_test
      displayName: 'Run unit tests'
      continueOnError: true
    - script: RUST_VERSION=nightly make rustls_unit_test
      displayName: 'Run unit tests with rustls'
      continueOnError: true
    - script: RUST_VERSION=nightly make check_integration_test
      displayName: 'Cargo check integration tests'
      continueOnError: true

- job: 'unit_and_integration_tests_windows'
  displayName: 'Unit and integration tests on Windows'
  pool:
    vmImage: 'vs2017-win2016'

  steps:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain stable
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: 'Install Rust'
    - script: make unit_test
      displayName: 'Run unit tests'
    - script: make rustls_unit_test
      displayName: 'Run unit tests with rustls'
    - script: make check_integration_test
      displayName: 'Cargo check integration tests'

- job: 'unit_and_integration_tests_windows_beta'
  displayName: 'Unit and integration tests on Windows (beta channel)'
  pool:
    vmImage: 'vs2017-win2016'

  steps:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain beta
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: 'Install Rust'
    - script: make unit_test
      displayName: 'Run unit tests'
      env: { RUST_VERSION: beta }
    - script: make rustls_unit_test
      displayName: 'Run unit tests with rustls'
      env: { RUST_VERSION: beta }
    - script: make check_integration_test
      displayName: 'Cargo check integration tests'
      env: { RUST_VERSION: beta }

- job: 'unit_and_integration_tests_windows_nightly'
  displayName: 'Unit and integration tests on Windows (nightly channel)'
  pool:
    vmImage: 'vs2017-win2016'

  steps:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain nightly
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: 'Install Rust'
    - script: make unit_test
      displayName: 'Run unit tests'
      continueOnError: true
      env: { RUST_VERSION: nightly }
    - script: make rustls_unit_test
      displayName: 'Run unit tests with rustls'
      continueOnError: true
      env: { RUST_VERSION: nightly }
    - script: make check_integration_test
      displayName: 'Cargo check integration tests'
      continueOnError: true
      env: { RUST_VERSION: nightly }

- job: 'crate_gen_linux'
  displayName: 'Crate generation on Linux'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: rustup component add --toolchain stable rustfmt
      displayName: 'Install rustfmt'
    - script: git submodule update --init --recursive
      displayName: 'Fetch botocore sources'
    - script: make generate
      displayName: 'Generate crates from botocore'

- job: 'crate_gen_osx'
  displayName: 'Crate generation on OSX'
  pool:
    vmImage: 'macos-10.13'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: rustup component add --toolchain stable rustfmt
      displayName: 'Install rustfmt'
    - script: git submodule update --init --recursive
      displayName: 'Fetch botocore sources'
    - script: make generate
      displayName: 'Generate crates from botocore'

- job: 'crate_gen_windows'
  displayName: 'Crate generation on Windows'
  pool:
    vmImage: 'vs2017-win2016'

  steps:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain stable
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: 'Install Rust'
    - script: rustup component add --toolchain stable rustfmt
      displayName: 'Install rustfmt'
    - script: git submodule update --init --recursive
      displayName: 'Fetch botocore sources'
    - script: make generate
      displayName: 'Generate crates from botocore'

- job: 'skeptic_linux'
  displayName: 'Skeptic tests on Linux'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - script: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust'
    - script: make skeptical
      displayName: 'Run skeptic tests'
